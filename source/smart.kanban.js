
/* Smart HTML Elements v6.0.0 (2020-Jan) 
Copyright (c) 2011-2020 jQWidgets. 
License: https://htmlelements.com/license/ */

Smart("smart-kanban",class extends Smart.BaseElement{static get properties(){return{addNewButton:{value:!1,type:"boolean"},collapsibleColumns:{value:!1,type:"boolean"},columns:{value:[],type:"object",reflectToAttribute:!1},dataSource:{value:null,type:"object?",reflectToAttribute:!1},editable:{value:!1,type:"boolean"},selectionMode:{value:"zeroOrOne",allowedValues:["zeroOrOne","oneOrManyExtended"],type:"string"},users:{value:[],type:"object",reflectToAttribute:!1}}}static get listeners(){return{resize:"_resizeHandler","container.click":"_containerClickHandler"}}template(){return`<div id="container" role="presentation">
                </div>`}add(a={}){const b=this,c=b.columns;"object"!=typeof a||0===c.length||(!a.status&&(a.status=c[0].dataField),b._createTask(a,!0))}collapse(a){const b=this,c=b.columns;if(b.collapsibleColumns&&1!==c.length&&(a=b._validateColumnArgument(a),a&&!a.collapsed)){if(a.collapsed=!0,b._columnToElement.get(a).classList.add("collapsed"),b._collapsedColumns===c.length-1){const d=0===c.indexOf(a)?1:0;c[d].collapsed=!1,b._columnToElement.get(c[d]).classList.remove("collapsed")}else b._collapsedColumns++;b._updateColumnWidths()}}expand(a){const b=this;if(a=b._validateColumnArgument(a),a&&a.collapsed){const c=b._columnToElement.get(a),d=c.children[1];a.collapsed=!1,c.classList.remove("collapsed"),b._collapsedColumns--,b._updateColumnWidths(),d.toRefresh&&(delete d.toRefresh,d.refresh())}}propertyChangedHandler(a,b,c){this;switch(super.propertyChangedHandler(a,b,c),a){case"":}}render(){const a=this;a._collapsedColumns=0,a.setAttribute("role","group"),a._renderColumns(),a._processDataSource(),super.render()}_containerClickHandler(a){const b=this,c=a.target,d=c.closest(".smart-kanban-header");if(d){const a=d.parentElement.column,e=d.parentElement.index;if(c.closest(".smart-kanban-header-add"))return void b.add({status:a.dataField});b.collapsibleColumns&&b[a.collapsed?"expand":"collapse"](e)}}_processDataSource(){const a=this,b=a.dataSource;b.forEach(b=>{a._createTask(b)}),a.columns.forEach(b=>a._refreshScrollViewer(b))}_createTask(a,b){const c=this,d=c.columns.find(b=>b.dataField===a.status);if(d){const e=document.createElement("div"),f=c._columnToElement.get(d).children[1];e.className="smart-kanban-task smart-unselectable",e.innerHTML=c._applyTaskTemplate(a),a.color&&(e.style.borderLeftColor=a.color),f.appendChild(e),b&&(d.collapsed?f.toRefresh=!0:f.refresh())}}_applyTaskTemplate(a){let b=a.text||"",c=a.tags,d="";return c&&(d=c.split(",").map(a=>`<span class="smart-kanban-task-tag">${a}</span>`).join("")),`<div class="smart-kanban-task-content">
                    <div class="smart-kanban-task-text">${b}</div>
                    <div class="smart-kanban-task-user"></div>
                </div>
                <div class="smart-kanban-task-footer">
                    <div class="smart-kanban-task-tags">${d}</div >
                    <div class="smart-kanban-task-settings"></div>
                    <div class="smart-kanban-task-comments"${a.comments?" num=\""+a.comments.length+"\"":""}></div >
                </div>`}_renderColumns(){const a=this,b=a.columns,c=a.collapsibleColumns,d=[],e=a.$.container,f=document.createDocumentFragment(),g=[];a._columnToElement=new Map,b.forEach(b=>{"string"==typeof b&&(b={dataField:b,label:b});(b.dataField||b.label)&&(!b.label&&(b.label=b.dataField),!b.dataField&&(b.dataField=b.label),b.collapsed&&c?a._collapsedColumns++:b.collapsed=!1,d.push(b))}),a._collapsedColumns===d.length&&(d[0].collapsed=!1,a._collapsedColumns--),d.forEach((b,c)=>{const e=document.createElement("div");e.className="smart-kanban-column",b.collapsed?(e.classList.add("collapsed"),g.push("auto")):g.push("1fr"),e.innerHTML=`<div class="smart-kanban-header smart-unselectable">
                    <div class="smart-kanban-header-add"></div>
                    <div class="smart-kanban-header-label">${b.label}</div >
                    <div class="smart-arrow smart-arrow-${c<d.length-1?"left":"right"}"></div>
                </div >
                <smart-scroll-viewer class="smart-kanban-column-content"></smart-scroll-viewer>`,f.appendChild(e),e.column=b,e.index=c,a._columnToElement.set(b,e)}),e.style.gridTemplateColumns=g.join(" "),e.appendChild(f),a.columns=d}_updateColumnWidths(){const a=this,b=a.columns,c=[];for(let a=0;a<b.length;a++)c.push(b[a].collapsed?"auto":"1fr");a.$.container.style.gridTemplateColumns=c.join(" ")}_validateColumnArgument(a){const b=this.columns;return isNaN(a)?"string"==typeof a?b.find(b=>b.dataField===a):null:b[a]}_resizeHandler(){const a=this;clearTimeout(a._resizeTimeout),a._resizeTimeout=setTimeout(function(){a.columns.forEach(b=>a._refreshScrollViewer(b))},50)}_refreshScrollViewer(a){const b=this._columnToElement.get(a).children[1];a.collapsed?b.toRefresh=!0:b.refresh()}});